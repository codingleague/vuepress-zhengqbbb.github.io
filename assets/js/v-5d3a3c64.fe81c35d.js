"use strict";(self.webpackChunkqbenben_blog=self.webpackChunkqbenben_blog||[]).push([[303],{6930:(s,n,e)=>{e.r(n),e.d(n,{data:()=>t});const t={key:"v-5d3a3c64",path:"/post/2022/02/06/vscode/",title:"VSCode常用插件以及配置分享",lang:"zh-CN",frontmatter:{layout:"Post",title:"VSCode常用插件以及配置分享",description:"VSCode 常用插件以及配置分享 | Qbenben blog. Record my life | 在代码世界里打怪升级的小靓仔",subtitle:"VSCode常用插件以及配置分享",author:"qbenben",date:"2022-02-06T00:00:00.000Z",useHeaderImage:!0,headerImage:"https://tva3.sinaimg.cn/large/6ccee0e1gy1gz4gi2e457j22800z0an6.jpg",headerMask:"rgba(40, 57, 101, .6)",catalog:!0,permalinkPattern:"/post/:year/:month/:day/:slug/",tags:["折腾记录"]},excerpt:"",headers:[{level:2,title:"整体效果",slug:"整体效果",children:[]},{level:2,title:"插件篇",slug:"插件篇",children:[{level:3,title:"基础插件",slug:"基础插件",children:[{level:4,title:"翻译插件",slug:"翻译插件",children:[]}]},{level:3,title:"主题插件",slug:"主题插件",children:[]},{level:3,title:"语言插件",slug:"语言插件",children:[{level:4,title:"前端篇",slug:"前端篇",children:[]},{level:4,title:"Shell篇",slug:"shell篇",children:[]},{level:4,title:"其他插件",slug:"其他插件",children:[]}]},{level:3,title:"配置篇",slug:"配置篇",children:[{level:4,title:"工作区",slug:"工作区",children:[]},{level:4,title:"配置项",slug:"配置项",children:[]}]}]}],git:{updatedTime:1648310139e3,contributors:[{name:"Zhengqbbb",email:"1074059947@qq.com",commits:9}]},readingTime:{minutes:6,words:1277},filePathRelative:"posts/vscode.md"}},7206:(s,n,e)=>{e.r(n),e.d(n,{default:()=>o});const t=(0,e(6252).uE)('<h2 id="整体效果" tabindex="-1"><a class="header-anchor" href="#整体效果" aria-hidden="true">#</a> 整体效果</h2><p><img src="https://user-images.githubusercontent.com/40693636/158596979-75c4b2ab-82b1-45dd-833c-7ffc1f37abb6.png" alt="整体效果"></p><h2 id="插件篇" tabindex="-1"><a class="header-anchor" href="#插件篇" aria-hidden="true">#</a> 插件篇</h2><h3 id="基础插件" tabindex="-1"><a class="header-anchor" href="#基础插件" aria-hidden="true">#</a> 基础插件</h3><details class="custom-container details"><summary>命令行一键安装</summary><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">read</span> -r s<span class="token punctuation">;</span> <span class="token keyword">do</span>\n  code --install-extension <span class="token string">&quot;<span class="token variable">$s</span>&quot;</span> --force\n<span class="token keyword">done</span> <span class="token operator">&lt;&lt;</span><span class="token string">A\nesbenp.prettier-vscode\nms-vscode-remote.remote-ssh\nms-azuretools.vscode-docker\neamodio.gitlens\nusernamehw.errorlens\nOBKoro1.korofileheader\nformulahendry.code-runner\nchristian-kohler.path-intellisense\nwix.vscode-import-cost\nwayou.vscode-todo-highlight\nemilast.LogFileHighlighter\nhumao.rest-client\nMS-CEINTL.vscode-language-pack-zh-hans\nintellsmi.comment-translate\nA</span>\n</code></pre></div></details><dl><dt><strong>Prettier - Code formatter</strong></dt><dd>格式化插件</dd><dt><strong>Remote - SSH</strong></dt><dd>vscode ssh远程服务器</dd><dt><strong>Docker</strong></dt><dd>vscode 访问docker容器</dd><dt><strong>GitLens</strong></dt><dd>代码行中查看 git 提交历史</dd><dt><strong>Error Lens</strong></dt><dd>错误信息代码行显示</dd><dt><strong>koroFileHeader</strong></dt><dd>快捷键自动生成函数注释 | 文件注释</dd><dt><strong>TODO Highlight</strong></dt><dd>TODO 等注释高亮</dd><dt><strong>Code Runner</strong></dt><dd>vscode 代码一键运行</dd><dt><strong>Path Intellisense</strong></dt><dd>智能路径提示</dd><dt><strong>Import Cost</strong></dt><dd>计算JavaScript引入依赖包大小</dd><dt><strong>Log File Highlighter</strong></dt><dd>log文件高亮显示</dd><dt><strong>REST Client</strong></dt><dd>类似 postman 的vscode测试接口工具</dd></dl><h4 id="翻译插件" tabindex="-1"><a class="header-anchor" href="#翻译插件" aria-hidden="true">#</a> 翻译插件</h4><dl><dt><strong>Chinese</strong></dt><dd>中文汉化vscode</dd><dt><strong>Comment Translate</strong></dt><dd>强力安利这款<mark>划词翻译插件</mark>，是我目前用到最好用的，配置成使用的是<code>Bing</code>免去代理的痛苦，安装后打开 <code>setting.json</code> 添加下列配置就可以很舒服的使用</dd></dl><div class="language-json ext-json"><pre class="language-json"><code><span class="token property">&quot;commentTranslate.source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Bing&quot;</span>\n</code></pre></div><h3 id="主题插件" tabindex="-1"><a class="header-anchor" href="#主题插件" aria-hidden="true">#</a> 主题插件</h3><details class="custom-container details"><summary>命令行一键安装</summary><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">read</span> -r s<span class="token punctuation">;</span> <span class="token keyword">do</span>\n  code --install-extension <span class="token string">&quot;<span class="token variable">$s</span>&quot;</span> --force\n<span class="token keyword">done</span> <span class="token operator">&lt;&lt;</span><span class="token string">A\nZhengqbbb.vitesse-qb-vscode-theme\nPKief.material-icon-theme\nA</span>\n</code></pre></div></details><dl><dt><strong>vitesse-qb</strong></dt><dd>主题是我 fork 了 <a href="https://github.com/antfu/vscode-theme-vitesse" target="_blank" rel="noopener noreferrer">vitesse</a> 并自己做了一些改动</dd><dt><strong>Material Icon Theme</strong></dt><dd>文件图标</dd></dl><h3 id="语言插件" tabindex="-1"><a class="header-anchor" href="#语言插件" aria-hidden="true">#</a> 语言插件</h3><h4 id="前端篇" tabindex="-1"><a class="header-anchor" href="#前端篇" aria-hidden="true">#</a> 前端篇</h4><details class="custom-container details"><summary>命令行一键安装</summary><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">read</span> -r s<span class="token punctuation">;</span> <span class="token keyword">do</span>\n  code --install-extension <span class="token string">&quot;<span class="token variable">$s</span>&quot;</span> --force\n<span class="token keyword">done</span> <span class="token operator">&lt;&lt;</span><span class="token string">A\nformulahendry.auto-close-tag\nformulahendry.auto-rename-tag\n2gua.rainbow-brackets\niceliu.highlight-icemode\nZignd.html-css-class-completion\nritwickdey.LiveServer\npranaygp.vscode-css-peek\nmrmlnc.vscode-scss\nstylelint.vscode-stylelint\nakamud.vscode-javascript-snippet-pack\nxabikos.JavaScriptSnippets\ndbaeumer.vscode-eslint\nrbbit.typescript-hero\nms-vscode.vscode-typescript-tslint-plugin\nhollowtree.vue-snippets\njohnsoncodehk.volar\noctref.vetur\nA</span>\n</code></pre></div></details><dl><dt><strong>Auto Close Tag</strong></dt><dd>自动合并html标签块</dd><dt><strong>Auto Rename Tag</strong></dt><dd>标签对同步修改</dd><dt><strong>Rainbow Brackets</strong></dt><dd>括号对 高亮区分</dd><dt><strong>highlight-icemode</strong></dt><dd>快速匹配高亮的括号对</dd><dt><strong>IntelliSense for CSS class names in HTML</strong></dt><dd>根据在工作区中找到的定义或通过link元素引用的外部文件为 HTML 属性提供 CSS 类名称补全</dd><dt><strong>Live Server</strong></dt><dd>搭建本地服务器，运行html</dd><dt><strong>CSS Peek</strong></dt><dd>根据上下文快速寻找匹配的class的css</dd><dt><strong>SCSS IntelliSense</strong></dt><dd>scss的智能提示</dd><dt><strong>Stylelint</strong></dt><dd>配合 stylelint 对于样式代码进行规范</dd><dt><strong>JavaScript Snippet Pack</strong></dt><dd>提供常见的 JavaScript 代码片段</dd><dt><strong>JavaScript (ES6) code snippets</strong></dt><dd>提供常见的 JavaScript （ES6）代码片段</dd><dt><strong>ESLint</strong></dt><dd>配合 eslint 对于JavaScript代码进行规范</dd><dt><strong>TypeScript Hero</strong></dt><dd>智能排序组织 ts的相关导入性文件</dd><dt><strong>TSLint</strong></dt><dd>配合 tslint 对于TypeScript代码进行规范</dd></dl><blockquote><p>Vue 3</p></blockquote><dl><dt><strong>Volar</strong></dt><dd>针对 Vue3 的官方插件，编写vue3代码<strong>必备</strong></dd></dl><blockquote><p>Vue 2.x</p></blockquote><dl><dt><strong>Vetur</strong></dt><dd>针对 Vue2.x 的官方插件</dd><dt><strong>Vue 3 Snippets</strong></dt><dd>提供Vue3 和 Vue2.x 的常见的代码片段</dd></dl><h4 id="shell篇" tabindex="-1"><a class="header-anchor" href="#shell篇" aria-hidden="true">#</a> Shell篇</h4><details class="custom-container details"><summary>命令行一键安装</summary><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">read</span> -r s<span class="token punctuation">;</span> <span class="token keyword">do</span>\n  code --install-extension <span class="token string">&quot;<span class="token variable">$s</span>&quot;</span> --force\n<span class="token keyword">done</span> <span class="token operator">&lt;&lt;</span><span class="token string">A\nbbenoist.shell\ntimonwong.shellcheck\nRemisa.shellman\nluggage66.AWK\nA</span>\n</code></pre></div></details><dl><dt><strong>Shell</strong></dt><dd>Shell 是一个VS Code扩展，可让您直接从vscode编辑器执行 shell 命令。</dd><dt><strong>ShellCheck</strong></dt><dd>Shell代码类型检查，编写 Shell 脚本<strong>必备</strong></dd><dt><strong>shellman</strong></dt><dd>提供一些常见 Shell 代码片段</dd><dt><strong>awk</strong></dt><dd>提供给awk的代码语法高亮</dd><dt><strong>shell-format</strong></dt><dd>shell格式化插件(毕竟vscode自身和Prettier都没有针对shell脚本的格式化) | :)我写shell不怎么会用到，提供的配置太少了</dd></dl><h4 id="其他插件" tabindex="-1"><a class="header-anchor" href="#其他插件" aria-hidden="true">#</a> 其他插件</h4><details class="custom-container details"><summary>命令行一键安装</summary><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">read</span> -r s<span class="token punctuation">;</span> <span class="token keyword">do</span>\n  code --install-extension <span class="token string">&quot;<span class="token variable">$s</span>&quot;</span> --force\n<span class="token keyword">done</span> <span class="token operator">&lt;&lt;</span><span class="token string">A\nyzane.markdown-pdf\nCharlesWan.markdown-toc\nA</span>\n</code></pre></div></details><dl><dt><strong>Markdown PDF</strong></dt><dd>markdown导出工具，如PDF，图片，html等</dd><dt><strong>Markdown TOC</strong></dt><dd>生成/更新markdown的导航栏</dd></dl><h3 id="配置篇" tabindex="-1"><a class="header-anchor" href="#配置篇" aria-hidden="true">#</a> 配置篇</h3><h4 id="工作区" tabindex="-1"><a class="header-anchor" href="#工作区" aria-hidden="true">#</a> 工作区</h4><p><strong>善用vscode的工作区</strong>，vscode的工作区可以有更舒服的版本管理，更好的全局搜索，与全局配置更高优先级的独立配置等</p><p><mark>比如：</mark> 在 Vue2.x 项目使用 Vetur插件，禁用 Volar插件。而到 Vue3 的项目中就使用 Volar插件，禁用 Vetur插件。</p><p>工作区是一份json配置文件，可以使用命令行<code>code &lt;工作区配置文件路径&gt;</code> 快速打开工作区</p><div class="language-json ext-json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// 支持排序，可以把重要的代码仓库往前排</span>\n  <span class="token property">&quot;folders&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;代码仓库1路径&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;代码仓库2路径&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 配置项，会覆盖系统配置。可以统一规定比如代码缩进，文件使用语言，主题风格等</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 这个最好是在项目当中的.vscode/extensions.json中定义，起到规范全队使用的插件</span>\n  <span class="token property">&quot;extensions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;recommendations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 打开项目后右下角的推荐插件列表</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h4><p>每款插件都有自己的配置项，可以通过他的README钻研获取， 分享一下我的侧边栏颜色配置(青绿色对应 Vue 主题色)， 当然你也可以不同的工作区不同色调可以自己调整</p><div class="language-json ext-json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;workbench.colorCustomizations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;activityBar.foreground&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#00FFFF&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><br><br><blockquote><p>I just try my best to make thing well, Could you give a <a href="https://github.com/Zhengqbbb/zhengqbbb.github.io" target="_blank" rel="noopener noreferrer">star ⭐</a> to encourage me ?</p></blockquote><blockquote><p>我是 Qbenben，一个爱折腾在沉浸在代码世界打怪升级的深圳小靓仔，感谢您的阅读。<a href="https://github.com/Zhengqbbb" target="_blank" rel="noopener noreferrer">Github</a> · <a href="https://www.qbenben.com/" target="_blank" rel="noopener noreferrer">Blog</a></p></blockquote>',39),a={},o=(0,e(3744).Z)(a,[["render",function(s,n){return t}]])}}]);